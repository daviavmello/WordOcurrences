{"ast":null,"code":"var _jsxFileName = \"/Users/davimello/Desktop/mello-textanalyzer/src/App.js\",\n    _s = $RefreshSig$();\n\n// import './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cheerio = require(\"cheerio\");\n\nconst axios = require(\"axios\"); // https://cors-anywhere.herokuapp.com/\n\n\nconst App = () => {\n  _s();\n\n  // let array = [];\n  // let tempArray = []\n  const [array, setArray] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      await axios.get(\"https://secret-ocean-49799.herokuapp.com/http://shakespeare.mit.edu/macbeth/full.html\").then(res => {\n        const $ = cheerio.load(res.data);\n        const text = $(\"html\").text();\n        const words = text.toLowerCase().replace(/[^a-zA-Z ]/g, \" \").replace(/\\s\\s+/g, \" \").split(\" \");\n        words.forEach(currentWord => {\n          if (array.some(object => object.word === currentWord)) {\n            const findObject = array.find(object => object.word === currentWord);\n            findObject.count += 1;\n          } else {\n            array.push({\n              word: currentWord,\n              count: 1\n            });\n          }\n        }); // array = array.sort((a, b) => (a.count < b.count ? 1 : -1));\n\n        setArray(array.sort((a, b) => a.count < b.count ? 1 : -1).slice(0, 20)); // console.log(array.slice(0, 20));\n      });\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Word Frequency Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Word Frequency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), array.map(object => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: object.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"SzvAfEsYVsRCwZAfWWLACzLXp2M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davimello/Desktop/mello-textanalyzer/src/App.js"],"names":["useState","useEffect","cheerio","require","axios","App","array","setArray","getData","get","then","res","$","load","data","text","words","toLowerCase","replace","split","forEach","currentWord","some","object","word","findObject","find","count","push","sort","a","b","slice","map"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB,C,CAEA;;;AAEA,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMO,OAAO,GAAG,YAAY;AAC5B,YAAMJ,KAAK,CACRK,GADG,CAEF,uFAFE,EAIHC,IAJG,CAIGC,GAAD,IAAS;AACb,cAAMC,CAAC,GAAGV,OAAO,CAACW,IAAR,CAAaF,GAAG,CAACG,IAAjB,CAAV;AACA,cAAMC,IAAI,GAAGH,CAAC,CAAC,MAAD,CAAD,CAAUG,IAAV,EAAb;AACA,cAAMC,KAAK,GAAGD,IAAI,CACfE,WADW,GAEXC,OAFW,CAEH,aAFG,EAEY,GAFZ,EAGXA,OAHW,CAGH,QAHG,EAGO,GAHP,EAIXC,KAJW,CAIL,GAJK,CAAd;AAMAH,QAAAA,KAAK,CAACI,OAAN,CAAeC,WAAD,IAAiB;AAC7B,cAAIf,KAAK,CAACgB,IAAN,CAAYC,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBH,WAAvC,CAAJ,EAAyD;AACvD,kBAAMI,UAAU,GAAGnB,KAAK,CAACoB,IAAN,CAChBH,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBH,WADX,CAAnB;AAGAI,YAAAA,UAAU,CAACE,KAAX,IAAoB,CAApB;AACD,WALD,MAKO;AACLrB,YAAAA,KAAK,CAACsB,IAAN,CAAW;AAAEJ,cAAAA,IAAI,EAAEH,WAAR;AAAqBM,cAAAA,KAAK,EAAE;AAA5B,aAAX;AACD;AACF,SATD,EATa,CAmBb;;AACApB,QAAAA,QAAQ,CAACD,KAAK,CAACuB,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACH,KAAF,GAAUI,CAAC,CAACJ,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA/C,EAAmDK,KAAnD,CAAyD,CAAzD,EAA4D,EAA5D,CAAD,CAAR,CApBa,CAqBb;AACD,OA1BG,CAAN;AA2BC,KA5BD;;AA6BAxB,IAAAA,OAAO;AACJ,GA/BM,EA+BJ,EA/BI,CAAT;AAgCA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGF,KAAK,CAAC2B,GAAN,CAAUV,MAAM,IAAI;AACnB,0BAAO;AAAA,kBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/CD;;GAAMnB,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["// import './App.css';\nimport { useState, useEffect } from 'react'\nconst cheerio = require(\"cheerio\");\nconst axios = require(\"axios\");\n\n// https://cors-anywhere.herokuapp.com/\n\nconst App = () => {\n  // let array = [];\n  // let tempArray = []\n  const [array, setArray] = useState([]);\n  useEffect(() => {\n  const getData = async () => {\n  await axios\n    .get(\n      \"https://secret-ocean-49799.herokuapp.com/http://shakespeare.mit.edu/macbeth/full.html\"\n    )\n    .then((res) => {\n      const $ = cheerio.load(res.data);\n      const text = $(\"html\").text();\n      const words = text\n        .toLowerCase()\n        .replace(/[^a-zA-Z ]/g, \" \")\n        .replace(/\\s\\s+/g, \" \")\n        .split(\" \");\n\n      words.forEach((currentWord) => {\n        if (array.some((object) => object.word === currentWord)) {\n          const findObject = array.find(\n            (object) => object.word === currentWord\n          );\n          findObject.count += 1;\n        } else {\n          array.push({ word: currentWord, count: 1 });\n        }\n      });\n      // array = array.sort((a, b) => (a.count < b.count ? 1 : -1));\n      setArray(array.sort((a, b) => (a.count < b.count ? 1 : -1)).slice(0, 20))\n      // console.log(array.slice(0, 20));\n    })\n  }\n  getData()\n    }, []);\n  return (\n    <table>\n      <h2>Word Frequency Table</h2> \n      <br />\n      <th>Word</th>\n      <th>Word Frequency</th>\n      {array.map(object => {\n        return <tr>{object.word}</tr>;\n      })}\n    </table>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}