{"ast":null,"code":"var _jsxFileName = \"/Users/davimello/Desktop/mello-textanalyzer/src/App.js\",\n    _s = $RefreshSig$();\n\n// import './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cheerio = require(\"cheerio\");\n\nconst axios = require(\"axios\"); // https://cors-anywhere.herokuapp.com/\n// let array = [];\n\n\nconst App = () => {\n  _s();\n\n  const [array, setArray] = useState([]);\n  seEffect(() => {\n    axios.get(\"https://secret-ocean-49799.herokuapp.com/http://shakespeare.mit.edu/macbeth/full.html\").then(res => {\n      const $ = cheerio.load(res.data);\n      const text = $(\"html\").text();\n      const words = text.toLowerCase().replace(/[^a-zA-Z ]/g, \" \").replace(/\\s\\s+/g, \" \").split(\" \");\n      words.forEach(currentWord => {\n        if (array.some(object => object.word === currentWord)) {\n          const findObject = array.find(object => object.word === currentWord);\n          findObject.count += 1;\n        } else {\n          array.push({\n            word: currentWord,\n            count: 1\n          });\n        }\n      });\n      setArray(array.sort((a, b) => a.count < b.count ? 1 : -1)); // console.dir(sortedArray, {'maxArrayLength': null})\n      // console.log(sortedArray);\n    });\n  }); // console.log(array);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Asafe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), array.map(object => {\n      // for (let i = 0; i < 20; i++) {\n      console.log(array);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: object.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this); // }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mNEMnFfdTVMInB12EsXKuBmuKk0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davimello/Desktop/mello-textanalyzer/src/App.js"],"names":["useState","useEffect","cheerio","require","axios","App","array","setArray","seEffect","get","then","res","$","load","data","text","words","toLowerCase","replace","split","forEach","currentWord","some","object","word","findObject","find","count","push","sort","a","b","map","console","log"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB,C,CAEA;AAEA;;;AACA,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAQ,EAAAA,QAAQ,CAAC,MAAM;AACfJ,IAAAA,KAAK,CACFK,GADH,CAEI,uFAFJ,EAIGC,IAJH,CAISC,GAAD,IAAS;AACb,YAAMC,CAAC,GAAGV,OAAO,CAACW,IAAR,CAAaF,GAAG,CAACG,IAAjB,CAAV;AACA,YAAMC,IAAI,GAAGH,CAAC,CAAC,MAAD,CAAD,CAAUG,IAAV,EAAb;AACA,YAAMC,KAAK,GAAGD,IAAI,CACfE,WADW,GAEXC,OAFW,CAEH,aAFG,EAEY,GAFZ,EAGXA,OAHW,CAGH,QAHG,EAGO,GAHP,EAIXC,KAJW,CAIL,GAJK,CAAd;AAMAH,MAAAA,KAAK,CAACI,OAAN,CAAeC,WAAD,IAAiB;AAC7B,YAAIf,KAAK,CAACgB,IAAN,CAAYC,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBH,WAAvC,CAAJ,EAAyD;AACvD,gBAAMI,UAAU,GAAGnB,KAAK,CAACoB,IAAN,CAChBH,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBH,WADX,CAAnB;AAGAI,UAAAA,UAAU,CAACE,KAAX,IAAoB,CAApB;AACD,SALD,MAKO;AACLrB,UAAAA,KAAK,CAACsB,IAAN,CAAW;AAAEJ,YAAAA,IAAI,EAAEH,WAAR;AAAqBM,YAAAA,KAAK,EAAE;AAA5B,WAAX;AACD;AACF,OATD;AAUApB,MAAAA,QAAQ,CAACD,KAAK,CAACuB,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACH,KAAF,GAAUI,CAAC,CAACJ,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA/C,CAAD,CAAR,CAnBa,CAoBb;AACA;AACD,KA1BH;AA2BG,GA5BK,CAAR,CAFgB,CAgChB;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGrB,KAAK,CAAC0B,GAAN,CAAUT,MAAM,IAAI;AACnB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY5B,KAAZ;AACA,0BAAO;AAAA,kBAAMiB,MAAM,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP,CAHmB,CAInB;AACD,KALA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5CD;;GAAMnB,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["// import './App.css';\nimport { useState, useEffect } from 'react'\nconst cheerio = require(\"cheerio\");\nconst axios = require(\"axios\");\n\n// https://cors-anywhere.herokuapp.com/\n\n// let array = [];\nconst App = () => {\n  const [array, setArray] = useState([]);\n  seEffect(() => {\n  axios\n    .get(\n      \"https://secret-ocean-49799.herokuapp.com/http://shakespeare.mit.edu/macbeth/full.html\"\n    )\n    .then((res) => {\n      const $ = cheerio.load(res.data);\n      const text = $(\"html\").text();\n      const words = text\n        .toLowerCase()\n        .replace(/[^a-zA-Z ]/g, \" \")\n        .replace(/\\s\\s+/g, \" \")\n        .split(\" \");\n\n      words.forEach((currentWord) => {\n        if (array.some((object) => object.word === currentWord)) {\n          const findObject = array.find(\n            (object) => object.word === currentWord\n          );\n          findObject.count += 1;\n        } else {\n          array.push({ word: currentWord, count: 1 });\n        }\n      });\n      setArray(array.sort((a, b) => (a.count < b.count ? 1 : -1)));\n      // console.dir(sortedArray, {'maxArrayLength': null})\n      // console.log(sortedArray);\n    });\n    });\n\n  // console.log(array);\n  return (\n    <div>\n      <h2>Asafe</h2>\n      {array.map(object => {\n        // for (let i = 0; i < 20; i++) {\n        console.log(array);\n        return <div>{object.word}</div>;\n        // }\n      })}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}