{"ast":null,"code":"var _jsxFileName = \"/Users/davimello/Desktop/mello-textanalyzer/src/App.js\";\n// import './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cheerio = require(\"cheerio\");\n\nconst axios = require(\"axios\"); // https://cors-anywhere.herokuapp.com/\n// let array = [];\n\n\nconst App = () => {\n  axios.get(\"https://secret-ocean-49799.herokuapp.com/http://shakespeare.mit.edu/macbeth/full.html\").then(res => {\n    const $ = cheerio.load(res.data);\n    const text = $(\"html\").text();\n    const words = text.toLowerCase().replace(/[^a-zA-Z ]/g, \" \").replace(/\\s\\s+/g, \" \").split(\" \");\n    words.forEach(currentWord => {\n      if (array.some(object => object.word === currentWord)) {\n        const findObject = array.find(object => object.word === currentWord);\n        findObject.count += 1;\n      } else {\n        array.push({\n          word: currentWord,\n          count: 1\n        });\n      }\n    });\n    array = array.sort((a, b) => a.count < b.count ? 1 : -1); // console.dir(sortedArray, {'maxArrayLength': null})\n    // console.log(sortedArray);\n  }); // console.log(array);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Asafe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), array.map(object => {\n      // for (let i = 0; i < 20; i++) {\n      console.log(array);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: object.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this); // }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davimello/Desktop/mello-textanalyzer/src/App.js"],"names":["useState","cheerio","require","axios","App","get","then","res","$","load","data","text","words","toLowerCase","replace","split","forEach","currentWord","array","some","object","word","findObject","find","count","push","sort","a","b","map","console","log"],"mappings":";AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB,C,CAEA;AAEA;;;AACA,MAAME,GAAG,GAAG,MAAM;AAChBD,EAAAA,KAAK,CACFE,GADH,CAEI,uFAFJ,EAIGC,IAJH,CAISC,GAAD,IAAS;AACb,UAAMC,CAAC,GAAGP,OAAO,CAACQ,IAAR,CAAaF,GAAG,CAACG,IAAjB,CAAV;AACA,UAAMC,IAAI,GAAGH,CAAC,CAAC,MAAD,CAAD,CAAUG,IAAV,EAAb;AACA,UAAMC,KAAK,GAAGD,IAAI,CACfE,WADW,GAEXC,OAFW,CAEH,aAFG,EAEY,GAFZ,EAGXA,OAHW,CAGH,QAHG,EAGO,GAHP,EAIXC,KAJW,CAIL,GAJK,CAAd;AAMAH,IAAAA,KAAK,CAACI,OAAN,CAAeC,WAAD,IAAiB;AAC7B,UAAIC,KAAK,CAACC,IAAN,CAAYC,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBJ,WAAvC,CAAJ,EAAyD;AACvD,cAAMK,UAAU,GAAGJ,KAAK,CAACK,IAAN,CAChBH,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBJ,WADX,CAAnB;AAGAK,QAAAA,UAAU,CAACE,KAAX,IAAoB,CAApB;AACD,OALD,MAKO;AACLN,QAAAA,KAAK,CAACO,IAAN,CAAW;AAAEJ,UAAAA,IAAI,EAAEJ,WAAR;AAAqBO,UAAAA,KAAK,EAAE;AAA5B,SAAX;AACD;AACF,KATD;AAUAN,IAAAA,KAAK,GAAGA,KAAK,CAACQ,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACH,KAAF,GAAUI,CAAC,CAACJ,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA/C,CAAR,CAnBa,CAoBb;AACA;AACD,GA1BH,EADgB,CA6BhB;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,KAAK,CAACW,GAAN,CAAWT,MAAD,IAAY;AACrB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,0BAAO;AAAA,kBAAME,MAAM,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP,CAHqB,CAIrB;AACD,KALA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzCD;;KAAMjB,G;AA2CN,eAAeA,GAAf","sourcesContent":["// import './App.css';\nimport { useState } from 'react'\nconst cheerio = require(\"cheerio\");\nconst axios = require(\"axios\");\n\n// https://cors-anywhere.herokuapp.com/\n\n// let array = [];\nconst App = () => {\n  axios\n    .get(\n      \"https://secret-ocean-49799.herokuapp.com/http://shakespeare.mit.edu/macbeth/full.html\"\n    )\n    .then((res) => {\n      const $ = cheerio.load(res.data);\n      const text = $(\"html\").text();\n      const words = text\n        .toLowerCase()\n        .replace(/[^a-zA-Z ]/g, \" \")\n        .replace(/\\s\\s+/g, \" \")\n        .split(\" \");\n\n      words.forEach((currentWord) => {\n        if (array.some((object) => object.word === currentWord)) {\n          const findObject = array.find(\n            (object) => object.word === currentWord\n          );\n          findObject.count += 1;\n        } else {\n          array.push({ word: currentWord, count: 1 });\n        }\n      });\n      array = array.sort((a, b) => (a.count < b.count ? 1 : -1));\n      // console.dir(sortedArray, {'maxArrayLength': null})\n      // console.log(sortedArray);\n    });\n\n  // console.log(array);\n  return (\n    <div>\n      <h2>Asafe</h2>\n      {array.map((object) => {\n        // for (let i = 0; i < 20; i++) {\n        console.log(array);\n        return <div>{object.word}</div>;\n        // }\n      })}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}